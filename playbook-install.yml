---
- hosts: openproject
  vars:
    ansible_python_interpreter: /usr/bin/python3
    kanboard_version: 1.2.21
    previous_version: 1.2.20
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"

  tasks:
  - name: Create user, domain and database
    import_tasks: tasks/hs_basis.yml

  - name: Sleep to avoid issue invalid user for temporary files
    pause:
      seconds: 10

  #################################
  ## install requirements
  #################################
  - name: Install node.js
    import_tasks: tasks/hs_nodejs.yml

  - name: Install ruby
    import_tasks: tasks/hs_ruby.yml

  #################################
  ## install openproject
  #################################
  - name: Check for git working tree
    become: yes
    become_user: "{{pac}}-{{user}}"
    stat:
      path: /home/pacs/{{pac}}/users/{{user}}/openproject
    register: workingtree
  - name: get openproject repo
    become: yes
    become_user: "{{pac}}-{{user}}"
    git:
      repo: https://github.com/opf/openproject.git
      version: "{{openproject_branch}}"
      dest: /home/pacs/{{pac}}/users/{{user}}/openproject
    when: not workingtree.stat.exists

  - name: install ruby packages
    become: yes
    become_user: "{{pac}}-{{user}}"
    # see https://www.openproject.org/docs/installation-and-operations/installation/manual/
    shell: |
      . ~/.profile
      gem update --system || exit -1
      gem install bundler || exit -1
      bundle update --bundler || exit -1
      bundle install --deployment --without mysql2 sqlite development test therubyracer docker || exit -1
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/openproject"
  - name: install node.js packages
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      . ~/.profile
      npm install || exit -1
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/openproject"

  #################################
  ## install data directory
  #################################
  - name: Check for HDD storage
    become: yes
    become_user: "{{pac}}-{{user}}"
    stat:
      path: /home/storage/{{pac}}/users/{{user}}
    register: hdd_storage
  - name: create data directory on storage
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/storage/{{pac}}/users/{{user}}/data"
      state: directory
      mode: 0744
    when: hdd_storage.stat.exists

  - name: create symbolic link for data to storage
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/storage/{{pac}}/users/{{user}}/data"
      dest: "/home/pacs/{{pac}}/users/{{user}}/data"
      state: link
    when: hdd_storage.stat.exists

  - name: create data directory on ssd
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/data"
      state: directory
      mode: 0744
    when: not hdd_storage.stat.exists

  - name: configure hdd data directory path
    become: yes
    become_user: "{{pac}}-{{user}}"
    set_fact:
      data_path: "/home/storage/{{pac}}/users/{{user}}/data"
    when: hdd_storage.stat.exists

  - name: configure ssd data directory path
    become: yes
    become_user: "{{pac}}-{{user}}"
    set_fact:
      data_path: "/home/pacs/{{pac}}/users/{{user}}/data"
    when: not hdd_storage.stat.exists

  #################################
  ## create directories
  #################################
  - name: create directory bin
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory

  #################################
  ## prepare configuration file
  #################################
  - name: copy database config file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/openproject/config/database.yml" src="templates/database.yml" mode=0600

  - name: copy configuration file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/openproject/config/configuration.yml" src="templates/configuration.yml" mode=0600

  - name: copy tmpdir configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/openproject/config/initializers/tmpdir.rb" src="templates/tmpdir.rb" mode=0600

  ##################################
  ## initialise the installation
  ##################################
  - name: create secret key
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      . ~/.profile
      EDITOR=cat ./bin/rails credentials:edit || exit -1
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/openproject"
        creates: /home/pacs/{{pac}}/users/{{user}}/openproject/config/credentials.yml.enc

  - name: prepare database
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      . ~/.profile
      export RAILS_ENV="production"
      ./bin/rails db:prepare || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_db_prepared
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/openproject"
        creates: /home/pacs/{{pac}}/users/{{user}}/.ansible_db_prepared

  - name: precompile assets
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      . ~/.profile
      export RAILS_ENV="production"
      ./bin/rake assets:precompile || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_assets_precompiled
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/openproject"
        creates: /home/pacs/{{pac}}/users/{{user}}/.ansible_assets_precompiled

  - name: seed the database
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      . ~/.profile
      export RAILS_ENV="production"
      LOCALE=en ./bin/rake db:seed || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_db_seeded
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/openproject"
        creates: /home/pacs/{{pac}}/users/{{user}}/.ansible_db_seeded

  - name: apply some settings for hostname and protocol
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      . ~/.profile
      export RAILS_ENV="production"
      rails setting:set[host_name={{domain}}]
      rails setting:set[protocol=https]
      rails setting:set[mail_from={{mail_from}}]
      touch /home/pacs/{{pac}}/users/{{user}}/.ansible_hostname_setting
    args:
        executable: /bin/bash
        chdir: "/home/pacs/{{pac}}/users/{{user}}/openproject"
        creates: /home/pacs/{{pac}}/users/{{user}}/.ansible_hostname_setting

  #################################
  ## upload scripts
  #################################
  - name: upload restart script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/restart.sh" src="templates/restart.sh" mode=0700
  - name: upload sql script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/sql.sh" src="templates/sql.sh" mode=0700

  #################################
  ## configure cronjobs
  #################################
  - name: upload emailjob script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/emailjob.sh" src="templates/emailjob.sh" mode=0700
  - name: upload jobrestart script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/jobrestart.sh" src="templates/jobrestart.sh" mode=0700
  # Disable this cronjob because it causes a high CPU load, and emails seem to be sent anyways
  #- name: setup cronjob for sending emails
  #  become: yes
  #  become_user: "{{pac}}-{{user}}"
  #  cron:
  #    name: "emailjob"
  #    minute: "*/2"
  #    job: "/home/pacs/{{pac}}/users/{{user}}/bin/emailjob.sh > /dev/null 2>&1"
  - name: setup cronjob for restarting background job
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "restarting background job"
      minute: "22"
      job: "/home/pacs/{{pac}}/users/{{user}}/bin/jobrestart.sh > /dev/null 2>&1"

  #################################
  ## activate website
  #################################
  - name: drop htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
       state: absent
  - name: drop app-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl"
       state: absent
  - name: create symbolic link for htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/openproject/public"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
      state: link
  - name: create symbolic link for app-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/openproject"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl"
      state: link
  - name: upload htaccess
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/.htaccess" src="templates/htaccess_domain"

